/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2025-06-17 04:10:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.combo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class Combo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Combos</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/Combo.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <!-- COMBOS A LA IZQUIERDA -->\r\n");
      out.write("    <div class=\"combo-container\">\r\n");
      out.write("        <!-- Combos con imÃ¡genes de Cinemark -->\r\n");
      out.write("        <div class=\"combo-card\" onclick=\"agregarCombo(4600, 'Pop Mediano')\">\r\n");
      out.write("            <img src=\"https://static.cinemarkhoyts.com.ar/Images/ConcessionItemImageN/A000000010.png?v=00002580\" alt=\"Combo\">\r\n");
      out.write("            <div class=\"combo-nombre\">Pop Mediano</div>\r\n");
      out.write("            <div class=\"combo-descripcion\">1 balde + 2 gaseosas</div>\r\n");
      out.write("            <div class=\"combo-precio\">$4600</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"combo-card\" onclick=\"agregarCombo(10500, 'Pop Mega Familia')\">\r\n");
      out.write("            <img src=\"https://static.cinemarkhoyts.com.ar/Images/ConcessionItemImageN/A000000198.png?v=00002580\" alt=\"Combo\">\r\n");
      out.write("            <div class=\"combo-nombre\">Pop Familia</div>\r\n");
      out.write("            <div class=\"combo-descripcion\">2 balde + 3 gaseosas</div>\r\n");
      out.write("            <div class=\"combo-precio\">$10500</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"combo-card\" onclick=\"agregarCombo(7500, 'Pop Mega Recargable')\">\r\n");
      out.write("            <img src=\"https://static.cinemarkhoyts.com.ar/Images/ConcessionItemImageN/A000000199.png?v=00002580\" alt=\"Combo\">\r\n");
      out.write("            <div class=\"combo-nombre\">Pop Mega Recargable</div>\r\n");
      out.write("            <div class=\"combo-descripcion\">1 balde + 2 gaseosas</div>\r\n");
      out.write("            <div class=\"combo-precio\">$7500</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"combo-card\" onclick=\"agregarCombo(3500, 'Pop Mega Individual')\">\r\n");
      out.write("            <img src=\"https://static.cinemarkhoyts.com.ar/Images/ConcessionItemImageN/A000000197.png?v=00002580\" alt=\"Combo\">\r\n");
      out.write("            <div class=\"combo-nombre\">Pop Mega Individual</div>\r\n");
      out.write("            <div class=\"combo-descripcion\">1 balde + 1 gaseosa</div>\r\n");
      out.write("            <div class=\"combo-precio\">$3500</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"combo-card\" onclick=\"agregarCombo(12500, 'Pop Mega Epic')\">\r\n");
      out.write("            <img src=\"https://static.cinemarkhoyts.com.ar/Images/ConcessionItemImageN/A000000196.png?v=00002580\" alt=\"Combo\">\r\n");
      out.write("            <div class=\"combo-nombre\">Pop Mega Epic</div>\r\n");
      out.write("            <div class=\"combo-descripcion\">2 balde + 5 gaseosas</div>\r\n");
      out.write("            <div class=\"combo-precio\">$12500</div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- RESUMEN A LA DERECHA -->\r\n");
      out.write("    <div class=\"right\">\r\n");
      out.write("        <h2 class=\"resumen-title\">RESUMEN</h2>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"resumen-section\">\r\n");
      out.write("            <span class=\"resumen-subtitle\">Cine</span>\r\n");
      out.write("            <div class=\"resumen-item\">\r\n");
      out.write("                <div class=\"icon-location\"></div>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <hr>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"resumen-section\">\r\n");
      out.write("            <span class=\"resumen-subtitle\">Candy</span>\r\n");
      out.write("            <div id=\"candyResumen\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <hr>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"resumen-section\">\r\n");
      out.write("            <p><strong><span id=\"selected-count\">1</span> ENTRADAS</strong></p>\r\n");
      out.write("            <p>Cargo por servicio Entradas: <span id=\"fee\">$7300</span></p>\r\n");
      out.write("            <p>Total Candy: <span id=\"candyTotal\">0</span></p>\r\n");
      out.write("            <p><strong>TOTAL: <span id=\"total\">0</span></strong></p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <form id=\"comboForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/ComboConfirmarPago\" method=\"post\" style=\"display: none;\">\r\n");
      out.write("            <input type=\"hidden\" name=\"combosJSON\" id=\"combosJSON\" />\r\n");
      out.write("            <input type=\"hidden\" name=\"selectedSeats\" id=\"selectedSeats\" />\r\n");
      out.write("            <input type=\"hidden\" name=\"subtotalEntradas\" id=\"subtotalEntradas\" />\r\n");
      out.write("            <input type=\"hidden\" name=\"cargoServicioEntradas\" id=\"cargoServicioEntradas\" />\r\n");
      out.write("            <input type=\"hidden\" name=\"totalEntradas\" id=\"totalEntradas\" />\r\n");
      out.write("            <input type=\"submit\" value=\"ConfirmarPago\" />\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"resumen-footer\">\r\n");
      out.write("            <div class=\"icon-bag\"></div>\r\n");
      out.write("            <strong>$<span id=\"footer-total\">0</span></strong>\r\n");
      out.write("            <a href=\"#\" onclick=\"event.preventDefault(); enviarFormulario()\" class=\"btn-continuar\">CONTINUAR</a>\r\n");
      out.write("            <a href=\"#\" id=\"process-checkout\" class=\"btn-continuar\">PAGAR</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- SCRIPTS -->\r\n");
      out.write("<script>\r\n");
      out.write("let totalCandy = 0;\r\n");
      out.write("let comboSeleccionados = {};\r\n");
      out.write("const cargoServicio = 7300;\r\n");
      out.write("\r\n");
      out.write("function agregarCombo(precio, nombre) {\r\n");
      out.write("    if (comboSeleccionados[nombre]) {\r\n");
      out.write("        comboSeleccionados[nombre].cantidad += 1;\r\n");
      out.write("    } else {\r\n");
      out.write("        comboSeleccionados[nombre] = { precio: precio, cantidad: 1 };\r\n");
      out.write("    }\r\n");
      out.write("    localStorage.setItem(\"combos\", JSON.stringify(comboSeleccionados));\r\n");
      out.write("    renderCombos();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function quitarCombo(nombre) {\r\n");
      out.write("    if (comboSeleccionados[nombre]) {\r\n");
      out.write("        comboSeleccionados[nombre].cantidad -= 1;\r\n");
      out.write("        if (comboSeleccionados[nombre].cantidad <= 0) {\r\n");
      out.write("            delete comboSeleccionados[nombre];\r\n");
      out.write("        }\r\n");
      out.write("        localStorage.setItem(\"combos\", JSON.stringify(comboSeleccionados));\r\n");
      out.write("        renderCombos();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function renderCombos() {\r\n");
      out.write("    const container = document.getElementById(\"candyResumen\");\r\n");
      out.write("    container.innerHTML = \"\";\r\n");
      out.write("    totalCandy = 0;\r\n");
      out.write("\r\n");
      out.write("    for (const nombre in comboSeleccionados) {\r\n");
      out.write("        const combo = comboSeleccionados[nombre];\r\n");
      out.write("        const subtotalCombo = combo.precio * combo.cantidad;\r\n");
      out.write("        totalCandy += subtotalCombo;\r\n");
      out.write("\r\n");
      out.write("        const item = document.createElement(\"div\");\r\n");
      out.write("        item.className = \"resumen-item\";\r\n");
      out.write("        item.innerHTML = `\r\n");
      out.write("            <div style=\"display: flex; align-items: center; justify-content: space-between; width: 100%;\">\r\n");
      out.write("                <div style=\"display: flex; align-items: center;\">\r\n");
      out.write("                    <img src=\"images/10.png\" class=\"resumen-img\" />\r\n");
      out.write("                    <div class=\"resumen-info\">\r\n");
      out.write("                        <span style=\"font-weight: bold;\">${combo.cantidad} Â· ${nombre}</span>\r\n");
      out.write("                        <small>$${subtotalCombo}</small>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <button type=\"button\" onclick=\"quitarCombo('${nombre}')\">â</button>\r\n");
      out.write("                    <button type=\"button\" onclick=\"agregarCombo(${combo.precio}, '${nombre}')\">+</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        `;\r\n");
      out.write("        container.appendChild(item);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    const totalFinal = totalCandy + cargoServicio;\r\n");
      out.write("    document.getElementById(\"candyTotal\").textContent = `$${totalCandy}`;\r\n");
      out.write("    document.getElementById(\"total\").textContent = `$${totalFinal}`;\r\n");
      out.write("    document.getElementById(\"footer-total\").textContent = totalFinal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function enviarFormulario() {\r\n");
      out.write("    document.getElementById(\"combosJSON\").value = JSON.stringify(comboSeleccionados);\r\n");
      out.write("    document.getElementById(\"cargoServicioEntradas\").value = cargoServicio;\r\n");
      out.write("    document.getElementById(\"totalEntradas\").value = totalCandy;\r\n");
      out.write("    document.getElementById(\"comboForm\").submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("renderCombos();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("document.getElementById('process-checkout').addEventListener('click', async () => {\r\n");
      out.write("    const product = {\r\n");
      out.write("        title: 'Combos seleccionados',\r\n");
      out.write("        unit_price: totalCandy + cargoServicio,\r\n");
      out.write("        quantity: 1,\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    try {\r\n");
      out.write("        const response = await fetch('http://localhost:3000/create_payment', {\r\n");
      out.write("            method: 'POST',\r\n");
      out.write("            headers: {\r\n");
      out.write("                'Content-Type': 'application/json',\r\n");
      out.write("            },\r\n");
      out.write("            body: JSON.stringify({ product }),\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        const data = await response.json();\r\n");
      out.write("\r\n");
      out.write("        if (response.ok) {\r\n");
      out.write("            window.location.href = data.payment_url;\r\n");
      out.write("        } else {\r\n");
      out.write("            alert('Error al procesar el pago: ' + data.error);\r\n");
      out.write("        }\r\n");
      out.write("    } catch (error) {\r\n");
      out.write("        console.error('Error al procesar pago:', error);\r\n");
      out.write("        alert('Hubo un error al procesar la solicitud de pago');\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
