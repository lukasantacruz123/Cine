/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2025-06-17 02:27:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.butacas;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class Butaca2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    int salaId = 2;

    Set<String> asientosOcupados = new HashSet<>();

    try {
        Connection conn = com.sample.core.dao.config.Conexion.dameConnection();
        PreparedStatement stmt = conn.prepareStatement(
            "SELECT fila, numero FROM asientos_blanca WHERE estado = 'ocupado' AND sala_id = ?"
        );
        stmt.setInt(1, salaId);
        ResultSet rs = stmt.executeQuery();
        while (rs.next()) {
            asientosOcupados.add(rs.getString("fila") + "-" + rs.getInt("numero"));
        }
        rs.close();
        stmt.close();
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<link rel = \"stylesheet\" href = \"../css/style.css\">\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Selección de Butacas</title>\r\n");
      out.write("    \r\n");
      out.write("      <script>\r\n");
      out.write("    let selectedSeats = [];\r\n");
      out.write("    function toggleSeat(seat) {\r\n");
      out.write("        if (seat.classList.contains(\"occupied\")) return;\r\n");
      out.write("\r\n");
      out.write("        const seatId = seat.querySelector(\".seat-id\").value;\r\n");
      out.write("\r\n");
      out.write("        if (seat.classList.contains(\"selected\")) {\r\n");
      out.write("            seat.classList.remove(\"selected\");\r\n");
      out.write("            selectedSeats = [];\r\n");
      out.write("        } else {\r\n");
      out.write("            // Deselecciona todos los demás asientos\r\n");
      out.write("            document.querySelectorAll('.seat.selected').forEach(s => s.classList.remove('selected'));\r\n");
      out.write("            selectedSeats = [];\r\n");
      out.write("\r\n");
      out.write("            seat.classList.add(\"selected\");\r\n");
      out.write("            selectedSeats.push(seatId);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        updateSummary();\r\n");
      out.write("        updateHiddenInputs();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function updateSummary() {\r\n");
      out.write("        const count = selectedSeats.length;\r\n");
      out.write("        const price = 6300;\r\n");
      out.write("        const total = count * price;\r\n");
      out.write("        const serviceFee = count > 0 ? 1000 : 0;\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(\"selected-count\").innerText = count;\r\n");
      out.write("        document.getElementById(\"selected-list\").innerText = selectedSeats.join(', ');\r\n");
      out.write("        document.getElementById(\"subtotal\").innerText = `$${total}`;\r\n");
      out.write("        document.getElementById(\"fee\").innerText = `$${serviceFee}`;\r\n");
      out.write("        document.getElementById(\"total\").innerText = `$${total + serviceFee}`;\r\n");
      out.write("    \r\n");
      out.write("        document.getElementById(\"hiddenSubtotal\").value = total;\r\n");
      out.write("        document.getElementById(\"hiddenFee\").value = serviceFee;\r\n");
      out.write("        document.getElementById(\"hiddenTotal\").value = total + serviceFee;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function updateHiddenInputs() {\r\n");
      out.write("        const container = document.getElementById(\"hidden-seats\");\r\n");
      out.write("        container.innerHTML = '';\r\n");
      out.write("        selectedSeats.forEach(id => {\r\n");
      out.write("            const input = document.createElement(\"input\");\r\n");
      out.write("            input.type = \"hidden\";\r\n");
      out.write("            input.name = \"selectedSeats\";\r\n");
      out.write("            input.value = id;\r\n");
      out.write("            container.appendChild(input);\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // ✅ Función que impide avanzar sin seleccionar un asiento\r\n");
      out.write("    function validateForm() {\r\n");
      out.write("        if (selectedSeats.length === 0) {\r\n");
      out.write("            alert(\"Por favor, seleccioná al menos una butaca antes de continuar.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"left\">\r\n");
      out.write("        <h3>HOLA CLIENTE<br>Seleccioná tus butacas:</h3>\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        <div class=\"screen\">PANTALLA</div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"seating\">\r\n");
      out.write("            ");

                char letra = 'A';
            
      out.write("\r\n");
      out.write("            <div style=\"display: flex; align-items: center; justify-content: center; font-weight: bold;\">");
      out.print( letra );
      out.write("</div>\r\n");
      out.write("            ");

                for (int col = 1; col <= 5; col++) {
                    String idAsiento = letra + "-" + col;
                    boolean ocupado = asientosOcupados.contains(idAsiento);
            
      out.write("\r\n");
      out.write("                    <div class=\"seat ");
      out.print( ocupado ? "occupied" : "" );
      out.write("\" \r\n");
      out.write("                         onclick=\"toggleSeat(this)\" \r\n");
      out.write("                         title=\"Fila ");
      out.print( letra );
      out.write(", Asiento ");
      out.print( col );
      out.write("\">\r\n");
      out.write("                        ");
      out.print( col );
      out.write("\r\n");
      out.write("                        <input type=\"hidden\" class=\"seat-id\" value=\"");
      out.print( idAsiento );
      out.write("\">\r\n");
      out.write("                    </div>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("            <div style=\"display: flex; align-items: center; justify-content: center; font-weight: bold;\">");
      out.print( letra );
      out.write("</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"legend\">\r\n");
      out.write("            <div class=\"legend-item\"><div class=\"legend-box your-seat\"></div> Tus butacas</div>\r\n");
      out.write("            <div class=\"legend-item\"><div class=\"legend-box available\"></div> Disponible</div>\r\n");
      out.write("            <div class=\"legend-item\"><div class=\"legend-box occupied\"></div> Ocupado</div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"right\">\r\n");
      out.write("        <div class=\"movie-info\">\r\n");
      out.write("            <img src=../images/6.jpg alt=\"BLANCAS\">\r\n");
      out.write("            <h3>Blanca Nieves</h3>\r\n");
      out.write("            \r\n");
      out.write("            <p><strong>CINE - SALA 2</strong></p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"summary\">\r\n");
      out.write("            <p><strong><span id=\"selected-count\">0</span> ENTRADAS</strong></p>\r\n");
      out.write("            <p><small>(BUTACAS: <span id=\"selected-list\">Ninguna</span>)</small></p>\r\n");
      out.write("            <p>Subtotal: <span id=\"subtotal\">$0</span></p>\r\n");
      out.write("            <p>Cargo por servicio Entradas: <span id=\"fee\">$0</span></p>\r\n");
      out.write("            <p>Cargo por servicio Candy: <span>$0</span></p>\r\n");
      out.write("            <p><strong>TOTAL: <span id=\"total\">$0</span></strong></p>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         <form action=\"");
      out.print(request.getContextPath());
      out.write("/AsientosConfirmarPago\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("       \r\n");
      out.write("    <div id=\"hidden-seats\"></div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- NUEVOS CAMPOS OCULTOS -->\r\n");
      out.write("    <input type=\"hidden\" id=\"hiddenSubtotal\" name=\"subtotalEntradas\" value=\"0\">\r\n");
      out.write("    <input type=\"hidden\" id=\"hiddenFee\" name=\"cargoServicioEntradas\" value=\"0\">\r\n");
      out.write("    <input type=\"hidden\" id=\"hiddenTotal\" name=\"totalEntradas\" value=\"0\">\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"button-group\">\r\n");
      out.write("        <a href=\"");
      out.print(request.getContextPath());
      out.write("/salas/sala2.jsp\" class=\"nav-volver\">Volver</a>\r\n");
      out.write("        <button type=\"submit\" class=\"nav-siguente\">Siguiente</button>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
